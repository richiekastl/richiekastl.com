---
import type { CollectionEntry } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Main from "@layouts/Main.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Pagination from "@components/Pagination.astro";
import Datetime from "@components/Datetime";
import Card from "@components/Card";
import { SITE } from "@config";

export interface Props {
  currentPage: number;
  totalPages: number;
  paginatedPosts: CollectionEntry<"blog">[];
}

const { currentPage, totalPages, paginatedPosts } = Astro.props;

const cardPromises = paginatedPosts.map(async (post) => {
  const { Content } = await post.render();
  return {
    href: `/posts/${post.slug}/`,
    frontmatter: post.data,
    Content,
    title: post.data.title,
    pubDatetime: post.data.pubDatetime,
    modDatetime: post.data.modDatetime
  };
});

const cards = await Promise.all(cardPromises);
---

<Layout title={`Posts | ${SITE.title}`}>
  <Header activeNav="posts" />
  <Main pageTitle="Posts" pageDesc="All the articles I've posted.">
    <ul>
      {cards.map(({ href, frontmatter, Content, title, pubDatetime, modDatetime }) => (
        <li class="my-6">
      <a
        href={href}
        class="inline-block text-lg font-medium text-skin-accent decoration-dashed underline-offset-4 focus-visible:no-underline focus-visible:underline-offset-0"
      >
        <h2>{title}</h2>
      </a>
      <Datetime pubDatetime={pubDatetime} modDatetime={modDatetime} />
      <article id="article" role="article" class="prose mx-auto mt-8 max-w-3xl">
      <Content />
    </article>
    <br>
    <hr>
    </li>
        
      ))}
    </ul>
  </Main>
  <Pagination
    currentPage={currentPage}
    totalPages={totalPages}
    prevUrl={`/posts${currentPage - 1 !== 1 ? "/" + (currentPage - 1) : ""}/`}
    nextUrl={`/posts/${currentPage + 1}/`}
  />
  <Footer noMarginTop={totalPages > 1} />
</Layout>